<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tangu.tcmts.dao.WarehouseStandardMapper">
	<resultMap id="BaseResultMap" type="com.tangu.tcmts.po.WarehouseStandardDO">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="medicine_id" property="medicineId" jdbcType="INTEGER" />
		<result column="warehouse_id" property="warehouseId" jdbcType="INTEGER" />
		<result column="standard_id" property="standardId" jdbcType="INTEGER" />
		<result column="storage_location" property="storageLocation" jdbcType="VARCHAR" />
		<result column="stock_value" property="stockValue" jdbcType="DECIMAL" />
		<result column="up_limit" property="upLimit" jdbcType="DECIMAL" />
		<result column="lower_limit" property="lowerLimit" jdbcType="DECIMAL" />
		<result column="batch_number" property="batchNumber" jdbcType="VARCHAR" />
		<result column="producer_id" property="producerId" jdbcType="INTEGER" />
		<result column="medicine_name" property="medicineName" jdbcType="VARCHAR" />
		<result column="standard_code" property="standardCode" jdbcType="VARCHAR" />
		<result column="manufacturing_enterprise" property="manufacturingEnterprise" jdbcType="VARCHAR" />
		<result column="producing_area" property="producingArea" jdbcType="VARCHAR" />
		<result column="medicine_code" property="medicineCode" jdbcType="VARCHAR" />
	</resultMap>
	<select id="listWarehouseStandard" parameterType="com.tangu.tcmts.po.WarehouseStandardDTO" resultMap="BaseResultMap">
		<!-- 非饮片库 -->
		<if test="warehouseType != 3">
			SELECT ws.id,CONCAT(m.`medicine_name`,IFNULL(ms.`standard_name`,'')) AS medicine_name
			,ms.`standard_code`,ms.`manufacturing_enterprise`,ms.`producing_area`,
			ws.`storage_location`,w.`warehouse_name`
			FROM `warehouse_standard` ws
			INNER JOIN medicine m ON m.id = ws.`medicine_id`
			LEFT JOIN `medicine_standard` ms ON ws.`standard_id` = ms.`id`
			INNER JOIN warehouse w ON w.`id` = ws.`warehouse_id`
		</if>
		<!-- 饮片库  -->
		<if test="warehouseType == 3">
			SELECT ws.`id`,m.`medicine_name`,m.`medicine_code`,ws.storage_location,w.`warehouse_name`
			FROM `warehouse_standard` ws
			INNER JOIN medicine m ON m.`id`=ws.`medicine_id`
			INNER JOIN warehouse w ON w.`id` = ws.`warehouse_id`
		</if>
		<where>
			<if test="warehouseId != null">
				AND ws.`warehouse_id`=#{warehouseId}
			</if>
			<if test="standardName != null and standardName != '' ">
				AND (ms.`standard_name` LIKE CONCAT('%',#{standardName},'%') 
				OR m.`medicine_name` LIKE CONCAT('%',#{standardName},'%')
				OR m.initial_code LIKE CONCAT('%',#{standardName},'%') 
				OR m.mnemonic_code LIKE CONCAT('%',#{standardName},'%'))
			</if>
			<if test="medicineName != null and medicineName != '' ">
				AND (m.`medicine_name` LIKE CONCAT('%',#{medicineName},'%') 
				OR m.initial_code LIKE CONCAT('%',#{medicineName},'%') 
				OR m.mnemonic_code LIKE CONCAT('%',#{medicineName},'%'))
			</if>
			<if test="id != null">
				AND ws.id =#{id}
			</if>
		</where>
	</select>

	<insert id="insertWarehouseStandard" parameterType="java.util.List">
		INSERT INTO `warehouse_standard` (medicine_id,warehouse_id,standard_id)
		VALUES
		<foreach collection="list" item="item" index="index" separator="," >
			(#{item.medicineId},#{item.warehouseId},#{item.standardId})
		</foreach>
	</insert>

	<select id="listNativeWarehouserStandard" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		SELECT id,medicine_id,warehouse_id,standard_id FROM `warehouse_standard` WHERE warehouse_id =#{warehouseId} AND batch_number IS NULL
	</select>
	<delete id="deleteWarehouseStandard" parameterType="java.util.List">
		DELETE FROM warehouse_standard WHERE id in
		<foreach item="item" collection="list" separator="," open="("  close=")">
			#{item.id}
		</foreach>
	</delete>
	<update id="updateStorageLocationByIds" parameterType="java.util.List">
		<foreach item="item" collection="list" separator=";">
		UPDATE `warehouse_standard` SET storage_location=#{item.storageLocation} 
		WHERE id = #{item.id}
		</foreach>
	</update>
</mapper>
