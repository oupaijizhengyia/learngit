<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tangu.tcmts.dao.RecipeMapper" >
  <resultMap id="BaseResultMap" type="com.tangu.tcmts.po.RecipeDO" >
    <result column="shipping_state" property="shippingState" jdbcType="INTEGER"/>
  </resultMap>
  <select id="getRecipeContent" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
     SELECT
    r.id, r.create_time, deal_date, recipe_code, sys_recipe_code, recipe_serial, recipe_bh,r.shipping_state,
    employee_name, r.mod_time, creator_id, state_name, remark, hospital_company AS hospital_name,
    slu.label AS boil_type_name, recipient_id, recipient_name, sex, age, recipient_tel, consignee, consignee_tel,
    r.province, r.city, r.region, r.recipient_address, inpatient_area, bed_number, department,
    express_site, belong, doctor_name, pathogen, `usage`, quantity, package_paste, total_package_paste,
    medicine_quantity, total_weight, r.soak_time, r.boil_time,e.employee_name AS creator,
    sl.label AS transfer_type, sysl.label AS business_type_name,carry_id, business_type,input_time,hospital_id,
    input_employee, input_state, logistics_code, origin_code, dest_code, make_order_state,
    actual_boil_time, soak_id, start_soak_time, check_state, machine_code, dispense_id,
    recipe_source, use_his_money, money, trade_freight, retail_freight, vat_freight,r.outpatient_num,
    taxless_freight, discount, process_cost, special_print, print_state, pack_type, other_package,
    packing_name,boil_type,bp.`project_name` AS boilProjectName,bp.volume,r.boil_project_id,
    r.invoice_code,r.outpatient_num,r.take_type,r.receive_remark,r.take_time,r.second_boil_time
    FROM recipe r LEFT JOIN employee e ON r.`creator_id`=e.`id`
    LEFT JOIN sys_lookup sl ON r.`carry_id`=sl.value AND sl.code='transferType'
    LEFT JOIN sys_lookup slu ON r.boil_type = slu.value AND  slu.code='boilType'
    LEFT JOIN sys_lookup sysl ON r.business_type = sysl.value AND sysl.code='businessType'
    LEFT JOIN sys_shipping_state sss ON  r.shipping_state=sss.state_id
    LEFT JOIN hospital h ON r.hospital_id=h.id
    LEFT JOIN `boil_project` bp ON bp.`id` = r.`boil_project_id` 
    WHERE r.id = #{id}
  </select>

  <select id="listRecipes" resultMap="BaseResultMap" parameterType="com.tangu.tcmts.po.RecipeDTO">
    SELECT
    r.id,recipe_code,sys_recipe_code,r.create_time,r.creator_id,deal_date,hospital_company AS hospital_name,state_name,
    recipient_name,quantity,slu.label AS boil_type_name,sl.`label` AS transfer_type,recipe_bh,shipping_state,
    carry_id,logistics_code,check_state,hospital_code,retail_freight,remark,process_cost,r.recipe_serial,r.outpatient_num,
    inpatient_area,bed_number,boil_type,deal_date,quantity,money, other_package, print_state,r.trade_freight,r.discount,
    r.trade_freight * r.discount AS unitPrice, r.dispense_id,bp.project_name as boilProjectName,r.take_type,r.take_time,
    r.total_package_paste,r.receive_remark,r.doctor_name,r.department,r.invoice_code
    FROM recipe r LEFT JOIN hospital h ON r.hospital_id=h.id
    LEFT JOIN sys_lookup sl ON r.`carry_id`=sl.value AND sl.code='transferType'
    LEFT JOIN sys_lookup slu ON r.boil_type = slu.value AND  slu.code='boilType'
    LEFT JOIN sys_shipping_state sss ON  r.shipping_state=sss.state_id
    left join `boil_project` bp on bp.id = r.boil_project_id
    <if test="medicineId > 0" >
      ,(select rm.recipe_id from recipe_medicine rm,recipe r
      where rm.medicine_id=#{medicineId} and rm.recipe_id=r.id
      and  r.create_time between #{startDate}  and #{endDate}
      group by rm.recipe_id) medicine
    </if>
    <where>
      <if test="shippingState != null">
        AND shipping_state = #{shippingState,jdbcType=INTEGER}
      </if>
      <if test="shippingState == null">
        AND shipping_state != 999
      </if>
      <if test="dateType == 'createTime'">
        AND r.create_time BETWEEN #{startDate} AND #{endDate}
      </if>
      <if test="dateType == 'dealDate'">
        AND deal_date BETWEEN #{startDate} AND #{endDate}
      </if>
      <if test="hospitalId != null">
        AND hospital_id = #{hospitalId}
      </if>
      <if test="belong != null">
        AND belong = #{belong}
      </if>
      <if test="recipientName != null and recipientName != ''">
        AND recipient_name LIKE CONCAT('%',#{recipientName},'%')
      </if>
      <if test="boilType != null">
        AND boil_type = #{boilType}
      </if>
      <if test="carryId != null">
        AND carry_id = #{carryId}
      </if>
      <if test="checkState != null">
        AND check_state = #{checkState}
      </if>
      <if test="inputState != null">
        AND input_state = #{inputState}
      </if>
      <if test="settleCompanyId != null">
        AND r.settle_company_id = #{settleCompanyId}
      </if>
      <if test="sysRecipeCode != null and sysRecipeCode != ''">
        AND sys_recipe_code LIKE CONCAT('%',#{sysRecipeCode},'%')
      </if>
      <if test="recipeCode != null and recipeCode != ''">
        AND recipe_code LIKE CONCAT('%',#{recipeCode},'%')
      </if>
      <if test="logisticsCode != null and logisticsCode != ''">
        AND logistics_code LIKE CONCAT('%',#{logisticsCode},'%')
      </if>
      <if test="expressSite != null and expressSite != ''">
        AND express_site LIKE CONCAT('%',#{expressSite},'%')
      </if>
      <if test="medicineId != null">
        AND r.id = medicine.recipe_id
      </if>
      <if test="specialPrint != null and specialPrint != ''">
        AND special_print LIKE CONCAT('%',#{specialPrint},'%')
      </if>
      <if test="otherPackage != null and otherPackage != ''">
        AND other_package LIKE CONCAT('%',#{otherPackage},'%')
      </if>
      <if test="packingName != null and packingName != ''">
        AND packing_name LIKE CONCAT('%',#{packingName},'%')
      </if>
      <if test="printState != null">
        AND print_state = #{printState}
      </if>
      <if test="creatorId != null">
        AND creator_id = #{creatorId}
      </if>
      <if test="doctorName != null and doctorName != ''">
        AND doctor_name LIKE CONCAT('%',#{doctorName},'%')
      </if>
      <if test="inpatientArea != null and inpatientArea != ''">
        AND inpatient_area LIKE CONCAT('%',#{inpatientArea},'%')
      </if>
      <if test="id != null">
      	AND r.id = #{id}
      </if>
      <if test="lockState == 1">
      	AND r.dispense_id = -1
      </if>
      <if test="invoiceCode != null and invoiceCode !='' ">
      	AND r.invoice_code = #{invoiceCode}
      </if>
      <if test="outpatientNum != null and outpatientNum != '' ">
      	AND r.outpatient_num = #{outpatientNum}
      </if>
      <if test="department != null and department != '' ">
      	AND r.department = #{department}
      </if>
      <if test="lockState != null and lockState > 0">
      	AND r.dispense_id = -1
      </if>
      <if test="dispenseId != null ">
      	AND r.dispense_id = #{dispenseId}
      	</if>
      <if test="recipeSerial != null and recipeSerial != ''">
        AND r.recipe_serial = #{recipeSerial}
      </if>
      <if test="bedNumber != null and bedNumber != ''">
        AND r.bed_number = #{bedNumber}
      </if>
      <if test="takeType != null and takeType > 0">
      	AND r.take_type = #{takeType}
      </if>
    </where>
    ORDER BY r.id DESC
  </select>
  <select id="getRecipeNumbers" parameterType="com.tangu.tcmts.po.RecipeDTO" resultType="com.tangu.tcmts.po.CountRecipes">
    SELECT
    SUM(CASE WHEN shipping_state = 1 THEN 1 ELSE 0 END) AS order_billing_number,
    SUM(CASE WHEN shipping_state = 10 THEN 1 ELSE 0 END) AS tisane_number,
    SUM(CASE WHEN shipping_state = 15 THEN 1 ELSE 0 END) AS checked_number,
    SUM(CASE WHEN shipping_state = 30 THEN 1 ELSE 0 END) AS soaked_number,
    SUM(CASE WHEN shipping_state = 35 THEN 1 ELSE 0 END) AS boil_first_number,
    SUM(CASE WHEN shipping_state = 40 THEN 1 ELSE 0 END) AS boiling_number,
    SUM(CASE WHEN shipping_state = 50 THEN 1 ELSE 0 END) AS boil_end_number,
    SUM(CASE WHEN shipping_state = 85 THEN 1 ELSE 0 END) AS paste_number,
    SUM(CASE WHEN shipping_state = 90 THEN 1 ELSE 0 END) AS packed_number,
    SUM(CASE WHEN shipping_state = 500 THEN 1 ELSE 0 END) AS signed_number
    FROM recipe r LEFT JOIN hospital h ON r.hospital_id=h.id
    LEFT JOIN sys_shipping_state sss ON  r.shipping_state=sss.state_id
    <if test="medicineId > 0" >
      ,(select rm.recipe_id from recipe_medicine rm,recipe r
      where rm.id=#{medicineId} and rm.recipe_id=r.id
      and  r.create_time between #{startDate}  and #{endDate}
      group by rm.recipe_id) medicine
    </if>
    <where>
      <if test="shippingState != null">
        AND shipping_state = #{shippingState,jdbcType=INTEGER}
      </if>
      <if test="shippingState == null">
        AND shipping_state != 999
      </if>
      <if test="dateType == 'createTime'">
        AND r.create_time BETWEEN #{startDate} AND #{endDate}
      </if>
      <if test="dateType == 'dealDate'">
        AND deal_date BETWEEN #{startDate} AND #{endDate}
      </if>
      <if test="hospitalId != null">
        AND hospital_id = #{hospitalId}
      </if>
      <if test="belong != null">
        AND belong = #{belong}
      </if>
      <if test="recipientName != null and recipientName != ''">
        AND recipient_name LIKE CONCAT('%',#{recipientName},'%')
      </if>
      <if test="boilType != null">
        AND boil_type = #{boilType}
      </if>
      <if test="carryId != null ">
        AND carry_id = #{carryId}
      </if>
      <if test="checkState != null">
        AND check_state = #{checkState}
      </if>
      <if test="inputState != null">
        AND input_state = #{inputState}
      </if>
      <if test="settleCompanyId != null">
        AND r.settle_company_id = #{settleCompanyId}
      </if>
      <if test="sysRecipeCode != null and sysRecipeCode != ''">
        AND sys_recipe_code LIKE CONCAT('%',#{sysRecipeCode},'%')
      </if>
      <if test="recipeCode != null and recipeCode != ''">
        AND recipe_code LIKE CONCAT('%',#{recipeCode},'%')
      </if>
      <if test="logisticsCode != null and logisticsCode != ''">
        AND logistics_code LIKE CONCAT('%',#{logisticsCode},'%')
      </if>
      <if test="expressSite != null and expressSite != ''">
        AND express_site LIKE CONCAT('%',#{expressSite},'%')
      </if>
      <if test="medicineId != null">
        AND r.id = medicine.recipe_id
      </if>
      <if test="specialPrint != null and specialPrint != ''">
        AND special_print LIKE CONCAT('%',#{specialPrint},'%')
      </if>
      <if test="otherPackage != null and otherPackage != ''">
        AND other_package LIKE CONCAT('%',#{otherPackage},'%')
      </if>
      <if test="packingName != null and packingName != ''">
        AND packing_name LIKE CONCAT('%',#{packingName},'%')
      </if>
      <if test="printState != null ">
        AND print_state = #{printState}
      </if>
      <if test="creatorId != null">
        AND creator_id = #{creatorId}
      </if>
      <if test="doctorName != null and doctorName != ''">
        AND doctor_name LIKE CONCAT('%',#{doctorName},'%')
      </if>
      <if test="inpatientArea != null and inpatientArea != ''">
        AND inpatient_area LIKE CONCAT('%',#{inpatientArea},'%')
      </if>
      <if test="id != null">
        AND r.id = #{id}
      </if>
      <if test="lockState != null and lockState > 0">
      	AND r.dispense_id = -1
      </if>
       <if test="takeType != null and takeType > 0">
      	AND r.take_type = #{takeType}
      </if>
      
    </where>
  </select>




  <select id="listCheckRecipes" resultMap="BaseResultMap" parameterType="com.tangu.tcmts.po.RecipeDTO">
      SELECT r.id,sys_recipe_code,r.create_time,shipping_state,remark,recipient_name,pre_check_state,
      recipe_code,doctor_name,boil_type,hospital_company AS hospital_name
      FROM recipe r LEFT JOIN hospital h ON r.hospital_id=h.id
      <where>
        shipping_state != 999
        <if test="startDate != null and endDate != null">
          AND r.create_time BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="hospitalId != null">
          AND hospital_id = #{hospitalId}
        </if>
        <if test="shippingState != null">
            <if test="shippingState == 1">
              AND shipping_state = #{shippingState}
            </if>
            <if test="shippingState == 5">
              AND shipping_state >= 5
            </if>
        </if>
        <if test="sysRecipeCode != null and sysRecipeCode != ''">
          AND sys_recipe_code LIKE CONCAT('%',#{sysRecipeCode},'%')
        </if>
        <if test="recipeCode != null and recipeCode != ''">
          AND recipe_code LIKE CONCAT('%',#{recipeCode},'%')
        </if>
        <if test="doctorName != null and doctorName != ''">
          AND doctor_name LIKE CONCAT('%',#{doctorName},'%')
        </if>
        <if test="recipientName != null and recipientName != ''">
          AND recipient_name LIKE CONCAT('%',#{recipientName},'%')
        </if>
        <if test="boilType != null">
          AND boil_type = #{boilType}
        </if>
        <if test="preCheckState != null">
          AND pre_check_state = #{preCheckState}
        </if>
      </where>
      ORDER BY create_time DESC
  </select>
  <insert id="insertSelective" parameterType="com.tangu.tcmts.po.RecipeDO" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into recipe
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="dealDate != null" >
        deal_date,
      </if>
      <if test="sysRecipeCode != null" >
        sys_recipe_code,
      </if>
      <if test="recipeCode != null" >
        recipe_code,
      </if>
      <if test="recipeSerial != null" >
        recipe_serial,
      </if>
      <if test="recipeBh != null" >
        recipe_bh,
      </if>
      <if test="modUser != null" >
        mod_user,
      </if>
      <if test="modTime != null" >
        mod_time,
      </if>
      <if test="creatorId != null" >
        creator_id,
      </if>
      <if test="shippingState != null" >
        shipping_state,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="hospitalId != null" >
        hospital_id,
      </if>
      <if test="settleCompanyId != null" >
        settle_company_id,
      </if>
      <if test="boilType != null" >
        boil_type,
      </if>
      <if test="recipientId != null" >
        recipient_id,
      </if>
      <if test="recipientName != null" >
        recipient_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="recipientTel != null" >
        recipient_tel,
      </if>
      <if test="consignee != null" >
        consignee,
      </if>
      <if test="consigneeTel != null" >
        consignee_tel,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="region != null" >
        region,
      </if>
      <if test="recipientAddress != null" >
        recipient_address,
      </if>
      <if test="inpatientArea != null" >
        inpatient_area,
      </if>
      <if test="bedNumber != null" >
        bed_number,
      </if>
      <if test="department != null" >
        department,
      </if>
      <if test="expressSite != null" >
        express_site,
      </if>
      <if test="belong != null" >
        belong,
      </if>
      <if test="doctorName != null" >
        doctor_name,
      </if>
      <if test="pathogen != null" >
        pathogen,
      </if>
      <if test="usage != null" >
        `usage`,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
      <if test="packagePaste != null" >
        package_paste,
      </if>
      <if test="totalPackagePaste != null" >
        total_package_paste,
      </if>
      <if test="medicineQuantity != null" >
        medicine_quantity,
      </if>
      <if test="totalWeight != null" >
        total_weight,
      </if>
      <if test="soakTime != null" >
        soak_time,
      </if>
      <if test="boilTime != null" >
        boil_time,
      </if>
      <if test="carryId != null" >
        carry_id,
      </if>
      <if test="businessType != null" >
        business_type,
      </if>
      <if test="inputTime != null" >
        input_time,
      </if>
      <if test="inputEmployee != null" >
        input_employee,
      </if>
      <if test="inputState != null" >
        input_state,
      </if>
      <if test="logisticsCode != null" >
        logistics_code,
      </if>
      <if test="originCode != null" >
        origin_code,
      </if>
      <if test="destCode != null" >
        dest_code,
      </if>
      <if test="makeOrderState != null" >
        make_order_state,
      </if>
      <if test="boilId != null" >
        boil_id,
      </if>
      <if test="actualBoilTime != null" >
        actual_boil_time,
      </if>
      <if test="soakId != null" >
        soak_id,
      </if>
      <if test="startSoakTime != null" >
        start_soak_time,
      </if>
      <if test="checkState != null" >
        check_state,
      </if>
      <if test="machineCode != null" >
        machine_code,
      </if>
      <if test="dispenseId != null" >
        dispense_id,
      </if>
      <if test="recipeSource != null" >
        recipe_source,
      </if>
      <if test="useHisMoney != null" >
        use_his_money,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="tradeFreight != null" >
        trade_freight,
      </if>
      <if test="retailFreight != null" >
        retail_freight,
      </if>
      <if test="vatFreight != null" >
        vat_freight,
      </if>
      <if test="taxlessFreight != null" >
        taxless_freight,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="processCost != null" >
        process_cost,
      </if>
      <if test="specialPrint != null" >
        special_print,
      </if>
      <if test="printState != null" >
        print_state,
      </if>
      <if test="packType != null" >
        pack_type,
      </if>
      <if test="otherPackage != null" >
        other_package,
      </if>
      <if test="packingName != null" >
        packing_name,
      </if>
      <if test="preCheckState != null" >
        pre_check_state,
      </if>
      <if test="customOneText != null" >
        custom_one_text,
      </if>
      <if test="customTwoText != null" >
        custom_two_text,
      </if>
      <if test="customOneFee != null" >
        custom_one_fee,
      </if>
      <if test="customTwoFee != null" >
        custom_two_fee,
      </if>
      <if test="outpatientNum != null">
        outpatient_num,
      </if>
      <if test="invoiceCode != null">
        invoice_code,
      </if>
      <if test="takeType != null">
        take_type,
      </if>
      <if test="takeTime != null">
        take_time,
      </if>
      <if test="receiveRemark != null">
        receive_remark,
      </if>
      <if test="secondBoilTime != null">
        second_boil_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealDate != null" >
        #{dealDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sysRecipeCode != null" >
        #{sysRecipeCode,jdbcType=VARCHAR},
      </if>
      <if test="recipeCode != null" >
        #{recipeCode,jdbcType=VARCHAR},
      </if>
      <if test="recipeSerial != null" >
        #{recipeSerial,jdbcType=VARCHAR},
      </if>
      <if test="recipeBh != null" >
        #{recipeBh,jdbcType=VARCHAR},
      </if>
      <if test="modUser != null" >
        #{modUser,jdbcType=INTEGER},
      </if>
      <if test="modTime != null" >
        #{modTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="shippingState != null" >
        #{shippingState,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="hospitalId != null" >
        #{hospitalId,jdbcType=INTEGER},
      </if>
      <if test="settleCompanyId != null" >
        #{settleCompanyId,jdbcType=INTEGER},
      </if>
      <if test="boilType != null" >
        #{boilType,jdbcType=INTEGER},
      </if>
      <if test="recipientId != null" >
        #{recipientId,jdbcType=INTEGER},
      </if>
      <if test="recipientName != null" >
        #{recipientName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=VARCHAR},
      </if>
      <if test="recipientTel != null" >
        #{recipientTel,jdbcType=VARCHAR},
      </if>
      <if test="consignee != null" >
        #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="consigneeTel != null" >
        #{consigneeTel,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="recipientAddress != null" >
        #{recipientAddress,jdbcType=VARCHAR},
      </if>
      <if test="inpatientArea != null" >
        #{inpatientArea,jdbcType=VARCHAR},
      </if>
      <if test="bedNumber != null" >
        #{bedNumber,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="expressSite != null" >
        #{expressSite,jdbcType=VARCHAR},
      </if>
      <if test="belong != null" >
        #{belong,jdbcType=INTEGER},
      </if>
      <if test="doctorName != null" >
        #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="pathogen != null" >
        #{pathogen,jdbcType=VARCHAR},
      </if>
      <if test="usage != null" >
        #{usage,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="packagePaste != null" >
        #{packagePaste,jdbcType=INTEGER},
      </if>
      <if test="totalPackagePaste != null" >
        #{totalPackagePaste,jdbcType=INTEGER},
      </if>
      <if test="medicineQuantity != null" >
        #{medicineQuantity,jdbcType=INTEGER},
      </if>
      <if test="totalWeight != null" >
        #{totalWeight,jdbcType=DECIMAL},
      </if>
      <if test="soakTime != null" >
        #{soakTime,jdbcType=INTEGER},
      </if>
      <if test="boilTime != null" >
        #{boilTime,jdbcType=INTEGER},
      </if>
      <if test="carryId != null" >
        #{carryId,jdbcType=INTEGER},
      </if>
      <if test="businessType != null" >
        #{businessType,jdbcType=INTEGER},
      </if>
      <if test="inputTime != null" >
        #{inputTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inputEmployee != null" >
        #{inputEmployee,jdbcType=INTEGER},
      </if>
      <if test="inputState != null" >
        #{inputState,jdbcType=INTEGER},
      </if>
      <if test="logisticsCode != null" >
        #{logisticsCode,jdbcType=VARCHAR},
      </if>
      <if test="originCode != null" >
        #{originCode,jdbcType=VARCHAR},
      </if>
      <if test="destCode != null" >
        #{destCode,jdbcType=VARCHAR},
      </if>
      <if test="makeOrderState != null" >
        #{makeOrderState,jdbcType=INTEGER},
      </if>
      <if test="boilId != null" >
        #{boilId,jdbcType=INTEGER},
      </if>
      <if test="actualBoilTime != null" >
        #{actualBoilTime,jdbcType=INTEGER},
      </if>
      <if test="soakId != null" >
        #{soakId,jdbcType=INTEGER},
      </if>
      <if test="startSoakTime != null" >
        #{startSoakTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkState != null" >
        #{checkState,jdbcType=INTEGER},
      </if>
      <if test="machineCode != null" >
        #{machineCode,jdbcType=VARCHAR},
      </if>
      <if test="dispenseId != null" >
        #{dispenseId,jdbcType=INTEGER},
      </if>
      <if test="recipeSource != null" >
        #{recipeSource,jdbcType=INTEGER},
      </if>
      <if test="useHisMoney != null" >
        #{useHisMoney,jdbcType=BIT},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="tradeFreight != null" >
        #{tradeFreight,jdbcType=DECIMAL},
      </if>
      <if test="retailFreight != null" >
        #{retailFreight,jdbcType=DECIMAL},
      </if>
      <if test="vatFreight != null" >
        #{vatFreight,jdbcType=DECIMAL},
      </if>
      <if test="taxlessFreight != null" >
        #{taxlessFreight,jdbcType=DECIMAL},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=DECIMAL},
      </if>
      <if test="processCost != null" >
        #{processCost,jdbcType=DECIMAL},
      </if>
      <if test="specialPrint != null" >
        #{specialPrint,jdbcType=VARCHAR},
      </if>
      <if test="printState != null" >
        #{printState,jdbcType=INTEGER},
      </if>
      <if test="packType != null" >
        #{packType,jdbcType=VARCHAR},
      </if>
      <if test="otherPackage != null" >
        #{otherPackage,jdbcType=VARCHAR},
      </if>
      <if test="packingName != null" >
        #{packingName,jdbcType=VARCHAR},
      </if>
      <if test="preCheckState != null" >
        #{preCheckState,jdbcType=INTEGER},
      </if>
      <if test="customOneText != null" >
        #{customOneText,jdbcType=VARCHAR},
      </if>
      <if test="customTwoText != null" >
        #{customTwoText,jdbcType=VARCHAR},
      </if>
      <if test="customOneFee != null" >
        #{customOneFee,jdbcType=DECIMAL},
      </if>
      <if test="customTwoFee != null" >
        #{customTwoFee,jdbcType=DECIMAL},
      </if>
      <if test="outpatientNum != null">
        #{outpatientNum,jdbcType=VARCHAR},
      </if>
      <if test="invoiceCode != null">
        #{invoiceCode},
      </if>
      <if test="takeType != null">
        #{takeType},
      </if>
      <if test="takeTime != null">
        #{takeTime},
      </if>
      <if test="receiveRemark != null">
        #{receiveRemark},
      </if>
      <if test="secondBoilTime != null">
        #{secondBoilTime},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tangu.tcmts.po.RecipeDO" >
    update recipe
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealDate != null" >
        deal_date = #{dealDate,jdbcType=TIMESTAMP},
      </if>
      <if test="recipeCode != null" >
        recipe_code = #{recipeCode,jdbcType=VARCHAR},
      </if>
      <if test="sysRecipeCode != null" >
          sys_recipe_code = #{sysRecipeCode,jdbcType=VARCHAR},
      </if>
      <if test="recipeSerial != null" >
        recipe_serial = #{recipeSerial,jdbcType=VARCHAR},
      </if>
      <if test="recipeBh != null" >
        recipe_bh = #{recipeBh,jdbcType=VARCHAR},
      </if>
      <if test="modUser != null" >
        mod_user = #{modUser,jdbcType=INTEGER},
      </if>
      <if test="modTime != null" >
        mod_time = #{modTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatorId != null" >
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="shippingState != null" >
        shipping_state = #{shippingState,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="hospitalId != null" >
        hospital_id = #{hospitalId,jdbcType=INTEGER},
      </if>
      <if test="settleCompanyId != null" >
        settle_company_id = #{settleCompanyId,jdbcType=INTEGER},
      </if>
      <if test="boilType != null" >
        boil_type = #{boilType,jdbcType=INTEGER},
      </if>
      <if test="recipientId != null" >
        recipient_id = #{recipientId,jdbcType=INTEGER},
      </if>
      <if test="recipientName != null" >
        recipient_name = #{recipientName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=VARCHAR},
      </if>
      <if test="recipientTel != null" >
        recipient_tel = #{recipientTel,jdbcType=VARCHAR},
      </if>
      <if test="consignee != null" >
        consignee = #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="consigneeTel != null" >
        consignee_tel = #{consigneeTel,jdbcType=VARCHAR},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="recipientAddress != null" >
        recipient_address = #{recipientAddress,jdbcType=VARCHAR},
      </if>
      <if test="inpatientArea != null" >
        inpatient_area = #{inpatientArea,jdbcType=VARCHAR},
      </if>
      <if test="bedNumber != null" >
        bed_number = #{bedNumber,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="expressSite != null" >
        express_site = #{expressSite,jdbcType=VARCHAR},
      </if>
      <if test="belong != null" >
        belong = #{belong,jdbcType=INTEGER},
      </if>
      <if test="doctorName != null" >
        doctor_name = #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="pathogen != null" >
        pathogen = #{pathogen,jdbcType=VARCHAR},
      </if>
      <if test="usage != null" >
        `usage` = #{usage,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="packagePaste != null" >
        package_paste = #{packagePaste,jdbcType=INTEGER},
      </if>
      <if test="totalPackagePaste != null" >
        total_package_paste = #{totalPackagePaste,jdbcType=INTEGER},
      </if>
      <if test="medicineQuantity != null" >
        medicine_quantity = #{medicineQuantity,jdbcType=INTEGER},
      </if>
      <if test="totalWeight != null" >
        total_weight = #{totalWeight,jdbcType=DECIMAL},
      </if>
      <if test="soakTime != null" >
        soak_time = #{soakTime,jdbcType=INTEGER},
      </if>
      <if test="boilTime != null" >
        boil_time = #{boilTime,jdbcType=INTEGER},
      </if>
      <if test="carryId != null" >
        carry_id = #{carryId,jdbcType=INTEGER},
      </if>
      <if test="businessType != null" >
        business_type = #{businessType,jdbcType=INTEGER},
      </if>
      <if test="inputTime != null" >
        input_time = #{inputTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inputEmployee != null" >
        input_employee = #{inputEmployee,jdbcType=INTEGER},
      </if>
      <if test="inputState != null" >
        input_state = #{inputState,jdbcType=INTEGER},
      </if>
      <if test="logisticsCode != null" >
        logistics_code = #{logisticsCode,jdbcType=VARCHAR},
      </if>
      <if test="originCode != null" >
        origin_code = #{originCode,jdbcType=VARCHAR},
      </if>
      <if test="destCode != null" >
        dest_code = #{destCode,jdbcType=VARCHAR},
      </if>
      <if test="makeOrderState != null" >
        make_order_state = #{makeOrderState,jdbcType=INTEGER},
      </if>
      <if test="boilId != null" >
        boil_id = #{boilId,jdbcType=INTEGER},
      </if>
      <if test="actualBoilTime != null" >
        actual_boil_time = #{actualBoilTime,jdbcType=INTEGER},
      </if>
      <if test="soakId != null" >
        soak_id = #{soakId,jdbcType=INTEGER},
      </if>
      <if test="startSoakTime != null" >
        start_soak_time = #{startSoakTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkState != null" >
        check_state = #{checkState,jdbcType=INTEGER},
      </if>
      <if test="machineCode != null" >
        machine_code = #{machineCode,jdbcType=VARCHAR},
      </if>
      <if test="dispenseId != null" >
        dispense_id = #{dispenseId,jdbcType=INTEGER},
      </if>
      <if test="recipeSource != null" >
        recipe_source = #{recipeSource,jdbcType=INTEGER},
      </if>
      <if test="useHisMoney != null" >
        use_his_money = #{useHisMoney,jdbcType=BIT},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="tradeFreight != null" >
        trade_freight = #{tradeFreight,jdbcType=DECIMAL},
      </if>
      <if test="retailFreight != null" >
        retail_freight = #{retailFreight,jdbcType=DECIMAL},
      </if>
      <if test="vatFreight != null" >
        vat_freight = #{vatFreight,jdbcType=DECIMAL},
      </if>
      <if test="taxlessFreight != null" >
        taxless_freight = #{taxlessFreight,jdbcType=DECIMAL},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=DECIMAL},
      </if>
      <if test="processCost != null" >
        process_cost = #{processCost,jdbcType=DECIMAL},
      </if>
      <if test="specialPrint != null" >
        special_print = #{specialPrint,jdbcType=VARCHAR},
      </if>
      <if test="printState != null" >
        print_state = #{printState,jdbcType=INTEGER},
      </if>
      <if test="packType != null" >
        pack_type = #{packType,jdbcType=VARCHAR},
      </if>
      <if test="otherPackage != null" >
        other_package = #{otherPackage,jdbcType=VARCHAR},
      </if>
      <if test="packingName != null" >
        packing_name = #{packingName,jdbcType=VARCHAR},
      </if>
      <if test="outpatientNum != null">
        outpatient_num = #{outpatientNum},
      </if>
      <if test="takeTime != null">
        take_time = #{takeTime},
      </if>
      <if test="shelvesCode != null">
        shelves_code = #{shelvesCode},
      </if>
      <if test="receiveRemark != null">
        receive_remark = #{receiveRemark},
      </if>
      <if test="secondBoilTime != null">
        second_boil_time = #{secondBoilTime},
      </if>
      <if test="takeType != null">
      	take_type = #{takeType},
      </if>
      <if test="boilProjectId != null">
      	boil_project_id = #{boilProjectId},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateShippingStateToReject" parameterType="com.tangu.tcmts.po.RecipeDTO">
    UPDATE recipe
    SET shipping_state = #{shippingState},
    mod_user = #{modUser},
    mod_time = now()
    WHERE id = #{id}
  </update>
  <update id="updateShippingState" parameterType="java.util.List">
    <foreach collection="list" item="item" index="index" separator=";">
      UPDATE recipe
      SET shipping_state = #{item.shippingState} , mod_user = #{item.modUser}, mod_time = now()
      WHERE id = #{item.id}
    </foreach>
  </update>
  <update id="updateCheckState" parameterType="java.util.List">
    <foreach collection="list" item="item" index="index" separator=";">
      UPDATE recipe
      SET check_state = #{item.checkState} , mod_user = #{item.modUser}
      WHERE id = #{item.id}
    </foreach>
  </update>
  <update id="updateRecipeCheckProccess" parameterType="com.tangu.tcmts.po.RecipeProccess">
    UPDATE recipe_proccess
    SET check_bill_id = #{checkBillId},check_bill_time=#{checkBillTime}
    WHERE recipe_id = #{recipeId}
  </update>
  <insert id="insertProccess" parameterType="java.util.List">
      INSERT INTO recipe_proccess(recipe_id,check_bill_id,check_bill_time)  
      VALUES              
	  <foreach collection="list" item="item" index="index" separator=",">
	  	(#{item.recipeId},#{item.checkBillId},#{item.checkBillTime})
	  </foreach>
  </insert>
  <update id="updateRecipe" parameterType="com.tangu.tcmts.po.RecipeDO" >
  	UPDATE recipe 
	SET 
	hospital_id = #{hospitalId},
	recipe_code = #{recipeCode},
	<if test="recipeSerial != null">
		recipe_serial = #{recipeSerial},
	</if>
	recipe_bh = #{recipeBh},
	deal_date = #{dealDate},
	belong = #{belong},
	recipient_name = #{recipientName},
	recipient_tel = #{recipientTel},
	sex = #{sex},
	age = #{age},
	quantity = #{quantity},
	package_paste = #{packagePaste},
	boil_type = #{boilType},
	pack_type = #{packType},
	soak_time = #{soakTime},
	boil_time = #{boilTime},
	inpatient_area = #{inpatientArea},
	bed_number = #{bedNumber},
	other_package = #{otherPackage},
	carry_id = #{carryId},
	business_type = #{businessType},
	consignee = #{consignee},
	consignee_tel = #{consigneeTel},
	province = #{province},
	city = #{city},
	region = #{region},
	recipient_address = #{recipientAddress},
	department = #{department},
	doctor_name = #{doctorName},
	pathogen = #{pathogen},
	packing_name = #{packingName},
	`usage` = #{usage},
	remark = #{remark},
	custom_one_text = #{customOneText},
	custom_one_text = #{customOneText},
	custom_one_fee = #{customOneFee},
	custom_two_fee = #{customTwoFee},
	discount = #{discount},
	process_cost = #{processCost},
	mod_user = #{modUser},
	special_print = #{specialPrint},
	total_package_paste = #{totalPackagePaste},
	settle_company_id = #{settleCompanyId},
	input_time = #{inputTime},
	input_employee = #{inputEmployee},
	input_state = #{inputState},
	retail_freight = #{retailFreight},
	trade_freight = #{tradeFreight},
	vat_freight = #{vatFreight},
	taxless_freight = #{taxlessFreight},
	total_weight = #{totalWeight},
	medicine_quantity = #{medicineQuantity},
	mod_time = NOW(),
	take_time = #{takeTime},
	receive_remark = #{receiveRemark},
	second_boil_time = #{secondBoilTime},
	logistics_code = #{logisticsCode},
	outpatient_num = #{outpatientNum},
	<if test="preCheckState != null">
		pre_check_state=#{preCheckState},
	</if>
	boil_project_id = #{boilProjectId},
	<if test="takeType != null">
		take_type = #{takeType},
	</if>
	invoice_code = #{invoiceCode}
	WHERE id = #{id}
  </update>
  <insert id="insert" parameterType="com.tangu.tcmts.po.RecipeDO" >
  <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into recipe ( deal_date, 
      sys_recipe_code, recipe_code, recipe_serial, 
      recipe_bh, mod_user, mod_time, 
      creator_id, shipping_state, remark, 
      hospital_id, settle_company_id, boil_type, 
      recipient_id, recipient_name, sex, 
      age, recipient_tel, consignee, 
      consignee_tel, province, city, 
      region, recipient_address, inpatient_area, 
      bed_number, department, express_site, 
      belong, doctor_name, pathogen, 
      `usage`, quantity, package_paste, 
      total_package_paste, medicine_quantity, total_weight, 
      soak_time, boil_time, carry_id, 
      business_type, input_time, input_employee, 
      input_state, logistics_code, origin_code, 
      dest_code, make_order_state, boil_id, 
      actual_boil_time, soak_id, start_soak_time, 
      check_state, machine_code, dispense_id, 
      recipe_source, use_his_money, money, 
      trade_freight, retail_freight, vat_freight, 
      taxless_freight, discount, process_cost, 
      special_print, print_state, pack_type, 
      other_package, packing_name, pre_check_state, 
      custom_one_text, custom_two_text, custom_one_fee, 
      custom_two_fee)
    values (  #{dealDate,jdbcType=TIMESTAMP}, 
      #{sysRecipeCode,jdbcType=VARCHAR}, #{recipeCode,jdbcType=VARCHAR}, #{recipeSerial,jdbcType=VARCHAR}, 
      #{recipeBh,jdbcType=VARCHAR}, #{modUser,jdbcType=INTEGER}, #{modTime,jdbcType=TIMESTAMP}, 
      #{creatorId,jdbcType=INTEGER}, #{shippingState,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{hospitalId,jdbcType=INTEGER}, #{settleCompanyId,jdbcType=INTEGER}, #{boilType,jdbcType=INTEGER}, 
      #{recipientId,jdbcType=INTEGER}, #{recipientName,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{age,jdbcType=VARCHAR}, #{recipientTel,jdbcType=VARCHAR}, #{consignee,jdbcType=VARCHAR}, 
      #{consigneeTel,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{region,jdbcType=VARCHAR}, #{recipientAddress,jdbcType=VARCHAR}, #{inpatientArea,jdbcType=VARCHAR}, 
      #{bedNumber,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, #{expressSite,jdbcType=VARCHAR}, 
      #{belong,jdbcType=INTEGER}, #{doctorName,jdbcType=VARCHAR}, #{pathogen,jdbcType=VARCHAR}, 
      #{usage,jdbcType=VARCHAR}, #{quantity,jdbcType=INTEGER}, #{packagePaste,jdbcType=INTEGER}, 
      #{totalPackagePaste,jdbcType=INTEGER}, #{medicineQuantity,jdbcType=INTEGER}, #{totalWeight,jdbcType=DECIMAL}, 
      #{soakTime,jdbcType=INTEGER}, #{boilTime,jdbcType=INTEGER}, #{carryId,jdbcType=INTEGER}, 
      #{businessType,jdbcType=INTEGER}, #{inputTime,jdbcType=TIMESTAMP}, #{inputEmployee,jdbcType=INTEGER}, 
      #{inputState,jdbcType=INTEGER}, #{logisticsCode,jdbcType=VARCHAR}, #{originCode,jdbcType=VARCHAR}, 
      #{destCode,jdbcType=VARCHAR}, #{makeOrderState,jdbcType=INTEGER}, #{boilId,jdbcType=INTEGER}, 
      #{actualBoilTime,jdbcType=INTEGER}, #{soakId,jdbcType=INTEGER}, #{startSoakTime,jdbcType=TIMESTAMP}, 
      #{checkState,jdbcType=INTEGER}, #{machineCode,jdbcType=VARCHAR}, #{dispenseId,jdbcType=INTEGER}, 
      #{recipeSource,jdbcType=INTEGER}, #{useHisMoney,jdbcType=BIT}, #{money,jdbcType=DECIMAL}, 
      #{tradeFreight,jdbcType=DECIMAL}, #{retailFreight,jdbcType=DECIMAL}, #{vatFreight,jdbcType=DECIMAL}, 
      #{taxlessFreight,jdbcType=DECIMAL}, #{discount,jdbcType=DECIMAL}, #{processCost,jdbcType=DECIMAL}, 
      #{specialPrint,jdbcType=VARCHAR}, #{printState,jdbcType=INTEGER}, #{packType,jdbcType=VARCHAR}, 
      #{otherPackage,jdbcType=VARCHAR}, #{packingName,jdbcType=VARCHAR}, #{preCheckState,jdbcType=INTEGER}, 
      #{customOneText,jdbcType=VARCHAR}, #{customTwoText,jdbcType=VARCHAR}, #{customOneFee,jdbcType=DECIMAL}, 
      #{customTwoFee,jdbcType=DECIMAL})
  </insert>
 	 <parameterMap type="map" id="spVO">
      	  <parameter property="billId" jdbcType="INTEGER" mode="OUT"/>
 	 </parameterMap>
  	<select id="generateBillIndex" parameterMap="spVO" statementType="CALLABLE">
		{call generate_order_id(
		#{billId,jdbcType=INTEGER,mode=OUT})}
	</select>
<!-- 	<select id="listPackingType" resultType="com.tangu.tcmts.po.PackingType">
		select
		packing_name as packingName,packing_type_id as packingTypeId from
		packing_type
	</select> -->
	<select id="listBtRelationZdByHospitalId" resultType="com.tangu.tcmts.po.BtRelationZd" parameterType="java.lang.Integer">
		SELECT id,header,field_name,table_type FROM `bt_relation_zd` WHERE hospital_id = #{hospitalId}
	</select>
	<select id="checkRecipeStatus" parameterType="com.tangu.tcmts.po.RecipeDO" resultType="com.tangu.tcmts.po.RecipeDO">
		select recipe.dispense_id as dispenseId, recipe.second_boil_time as secondBoilTime, logistics_code as logisticsCode, recipe.id as id,sys_recipe_code as recipeCode,shipping_state as shippingState,boil_type as boilType,pack_type as packType,recipe.other_package as otherPackage,
	recipe.quantity as quantity,soak_time as soakTime,boil_time as boilTime,recipe_scan.receive_scan_time as receiveScanTime,operate_type as operateType,
	recipe_proccess.end_boil_time as endBoilTime,recipe_proccess.start_boil_time as startBoilTime,recipe_proccess.start_soak_time as startSoakTime,
	ifnull(machine.id,0) as machineId,recipe.recipient_name as recipientName,machine.machine_code as machineCode
	from recipe left join recipe_scan on recipe.id=recipe_scan.recipe_id and operate_type=shipping_state
	left join machine on machine.id=recipe_scan.machine_id
	left join recipe_proccess on recipe.id=recipe_proccess.recipe_id
	where recipe.sys_recipe_code= #{recipeCode,jdbcType=VARCHAR} 
	</select>
	<update id="updateRecipeStatus" parameterType="com.tangu.tcmts.po.RecipeDO" >
		update recipe
		<set >
		<if test="shippingState != null and shippingState != ''" >
			shipping_state=#{shippingState,jdbcType=INTEGER},
		</if>
		<if test="actualBoilTime != null and actualBoilTime != ''" >
			actual_boil_time = #{actualBoilTime,jdbcType=INTEGER},
		</if>
		<if test="machineCode != null and machineCode != ''" >
			machine_code = #{machineCode,jdbcType=VARCHAR},
		</if>
		<if test="dispenseId != null and dispenseId != ''" >
			dispense_id=#{dispenseId,jdbcType=INTEGER},
		</if>
		<if test="boilId != null and boilId != ''" >
			boil_id=#{boilId,jdbcType=INTEGER},
		</if>
		<if test="soakId != null and soakId != ''" >
			soak_id=#{soakId,jdbcType=INTEGER},
		</if>
		<if test="startSoakTime != null" >
			start_soak_time = #{startSoakTime,jdbcType=TIMESTAMP},
		</if>
		<if test="shelvesCode != null and shelvesCode != ''" >
			shelves_code = #{shelvesCode},
		</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateProccess" parameterType="com.tangu.tcmts.po.RecipeDO" >
		update recipe_proccess 
		<set >
		<if test="makeId != null and makeId != ''" >
			make_id=#{makeId,jdbcType=INTEGER},
		</if>
		<if test="makeTime != null" >
			make_time = #{makeTime,jdbcType=TIMESTAMP},
		</if>
		<if test="checkId != null and checkId != ''" >
			check_id=#{checkId,jdbcType=INTEGER},
		</if>
		<if test="checkTime != null" >
			check_time = #{checkTime,jdbcType=TIMESTAMP},
		</if>
		<if test="soakId != null and soakId != ''" >
			soak_id=#{soakId,jdbcType=INTEGER},
		</if>
		<if test="startSoakTime != null" >
			start_soak_time = #{startSoakTime,jdbcType=TIMESTAMP},
		</if>
		<if test="startBoilId != null and startBoilId != ''" >
			start_boil_id=#{startBoilId,jdbcType=INTEGER},
		</if>
		<if test="startBoilTime != null" >
			start_boil_time = #{startBoilTime,jdbcType=TIMESTAMP},
		</if>
		<if test="boilMachineId != null and boilMachineId != ''" >
			boil_machine_id=#{boilMachineId,jdbcType=INTEGER},
		</if>
		<if test="endBoilId != null and endBoilId != ''" >
			end_boil_id=#{endBoilId,jdbcType=INTEGER},
		</if>
		<if test="endBoilTime != null" >
			end_boil_time = #{endBoilTime,jdbcType=TIMESTAMP},
		</if>
		<if test="collectId != null and collectId != ''" >
			collect_id=#{collectId,jdbcType=INTEGER},
		</if>
		<if test="collectTime != null" >
			collect_time = #{collectTime,jdbcType=TIMESTAMP},
		</if>
		<if test="packageId != null and packageId != ''" >
			package_id=#{packageId,jdbcType=INTEGER},
		</if>
		<if test="packageTime != null" >
			package_time = #{packageTime,jdbcType=TIMESTAMP},
		</if>
		<if test="endSubsideTime != null" >
			end_subside_time = #{endSubsideTime,jdbcType=TIMESTAMP},
		</if>
		<if test="fristBoilId != null and fristBoilId != ''" >
			frist_boil_id=#{fristBoilId,jdbcType=INTEGER},
		</if>
		<if test="fristBoilTime != null" >
			frist_boil_time = #{fristBoilTime,jdbcType=TIMESTAMP},
		</if>
		<if test="checkBillId != null and checkBillId != ''" >
			check_bill_id=#{checkBillId,jdbcType=INTEGER},
		</if>
		<if test="checkBillTime != null" >
			check_bill_time = #{checkBillTime,jdbcType=TIMESTAMP},
		</if>
		<if test="afterBoilId != null and afterBoilId != ''" >
			after_boil_id=#{afterBoilId,jdbcType=INTEGER},
		</if>
		<if test="afterBoilTime != null" >
			after_boil_time = #{afterBoilTime,jdbcType=TIMESTAMP},
		</if>
		<if test="deliveryId != null and deliveryId != ''" >
			delivery_id=#{deliveryId,jdbcType=INTEGER},
		</if>
		<if test="deliveryTime != null" >
			delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
		</if>
		<if test="shelveUser != null" >
			shelve_user = #{shelveUser},
		</if>
		<if test="shelveTime != null" >
			shelve_time = #{shelveTime},
		</if>
		</set>
		where recipe_id = #{id,jdbcType=INTEGER}
	</update>
	<insert id="insertRecipeScan" parameterType="com.tangu.tcmts.po.RecipeScan" >
  	<selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into recipe_scan (recipe_id, receive_scan_time, receive_scan_use, picture_path,
      operate_comment, operate_type, machine_id, quantity, concentrate_volume)
    values (#{recipeId,jdbcType=INTEGER}, #{receiveScanTime,jdbcType=TIMESTAMP}, #{receiveScanUse,jdbcType=INTEGER},
      #{picturePath,jdbcType=VARCHAR}, #{operateComment,jdbcType=VARCHAR}, #{operateType,jdbcType=INTEGER}, #{machineId,jdbcType=INTEGER},
      #{quantity,jdbcType=INTEGER}, #{concentrateVolume,jdbcType=REAL})
    </insert>
    <select id="updateMachineBycode" parameterType="com.tangu.tcmts.po.RecipeDO" resultType="com.tangu.tcmts.po.RecipeDO">
	select recipe.id as id,sys_recipe_code as recipeCode,shipping_state as shippingState,boil_type as boilType,pack_type as packType,
	recipe.quantity as quantity,soak_time as soakTime,boil_time as boilTime,recipe_scan.receive_scan_time as receiveScanTime,operate_type as operateType,ifnull(machine_id,0) as machineId 
	from recipe left join recipe_scan on recipe.recipe_id=recipe_scan.recipe_id and operate_type=#{operateType,jdbcType=INTEGER} where recipe.sys_recipe_code=#{recipeCode,jdbcType=VARCHAR}   
    </select>
	<select id="generateBillIdIndex" parameterType="java.lang.String" resultType="java.lang.String">
		select ifnull(max(substring(bill_id,length(#{prefix})+1)+1),1) as nextIndex
		from transfer_recipe
		where locate(#{prefix},bill_id) =1
	</select>
	<insert id="insertRecipePackingPrint" parameterType="com.tangu.tcmts.po.RecipeDO" >
		insert into recipe_packing_print (recipe_id,machine_id,print_number)
    	values (#{id,jdbcType=INTEGER},#{machineId,jdbcType=INTEGER},0)
	</insert>
    <update id="updateRecipePrintState" parameterType="java.util.List">
      <foreach collection="list" index="index" item="item" separator=";">
        UPDATE recipe
        SET print_state = 1
        WHERE id = #{item}
      </foreach>
    </update>

	<select id="findRecipeScanList" parameterType="com.tangu.tcmts.po.RecipeDO" resultType="com.tangu.tcmts.po.RecipeDO">
	select recipe.id as id,sys_recipe_code as recipeCode,shipping_state as shippingState,ifnull(recipe.total_weight,0) as totalWeight,hospital.hospital_nickname as hospitalNickname,
	ifnull(recipe.quantity,0) as quantity,machine.machine_code as machineCode,recipe.recipient_name as recipientName,employee.employee_name as employeeName,pack_type as packType,ifnull(operate_type,0) as operateType,recipe.package_paste as packagePaste
	from recipe left join hospital on recipe.hospital_id = hospital.id 
	left join recipe_scan on recipe.id=recipe_scan.recipe_id and operate_type in (10,15,40) 
	left join employee on recipe_scan.receive_scan_use = employee.id
	left join machine on machine.id=recipe_scan.machine_id where recipe.sys_recipe_code=  #{recipeCode,jdbcType=VARCHAR};
    </select>
    <select id="getZnpgRecipeList" resultType="com.tangu.tcmts.po.RecipeDO">
	select recipe.create_time as createTime,
  	((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(start_soak_time))/60-soak_time) as soakTimeLong,
  	hospital.hospital_nickname as hospitalNickname ,recipe.recipient_name as recipientName,recipe.sys_recipe_code as recipeCode
	from recipe,hospital
	where 
	recipe.hospital_id=hospital.id
	and (bill_date=current_date() or bill_date=date_sub(current_date(),interval 1 day))
	and shipping_state=5
	and IFNULL(if_allot,0)=0
	and ((UNIX_TIMESTAMP(now())-UNIX_TIMESTAMP(start_soak_time))/60-soak_time)&gt;=0
    </select>
    <insert id="addCheckScan" parameterType="com.tangu.tcmts.po.RecipeDO" >
	  	<selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
	      SELECT LAST_INSERT_ID()
	    </selectKey>
	     insert into check_scan (recipe_id, check_time, check_id)
	    values (#{id,jdbcType=INTEGER}, #{checkTime,jdbcType=TIMESTAMP}, #{scanUser,jdbcType=INTEGER})
    </insert>

    <select id="getRecipeMedicineForXj" parameterType="com.tangu.tcmts.po.RecipeDO" resultType="com.tangu.tcmts.po.MedicineDO">
	select 
		medicine.id as id,
	  	medicine.medicine_type as medicineType,
		medicine.operate_time as operateTime,
		recipe_medicine.special_boil_type as specialBoilType,
	  	IFNULL(medicine.unit_type,1) as unitType,
		IFNULL(medicine.mnemonic_code,'') as mnemonicCode,
		IFNULL(medicine.medicine_name,'') as medicineName,
		IFNULL(medicine.standard,'') as standard
		from recipe_medicine
		left join medicine on recipe_medicine.medicine_id=medicine.id
        where recipe_id=#{id,jdbcType=INTEGER}
    </select>
    <select id="selectRecipeByCode" parameterType="com.tangu.tcmts.po.RecipeDO" resultType="com.tangu.tcmts.po.RecipeDO">
	select recipe.id as id,sys_recipe_code as recipeCode,shipping_state as shippingState,boil_type as boilType,pack_type as packType,
	recipe.quantity as quantity,soak_time as soakTime,boil_time as boilTime,recipe_scan.receive_scan_time as receiveScanTime,
	operate_type as operateType,ifnull(machine_id,0) as machineId 
	from recipe left join recipe_scan on recipe.id=recipe_scan.recipe_id and operate_type=#{operateType,jdbcType=INTEGER} 
	where recipe.sys_recipe_code=#{recipeCode,jdbcType=VARCHAR}   
    </select>
    <select id="getCheckState" parameterType="com.tangu.tcmts.po.RecipeDO" resultType="com.tangu.tcmts.po.RecipeDO">
    	select check_state from recipe where id = #{id}
    </select>
    
    <select id="getNotAuthRecipe" resultType="com.tangu.tcmts.po.RecipeDO" parameterType="java.lang.Integer" >
    	SELECT id,dispense_id as dispenseId 
    	FROM recipe 
    	WHERE shipping_state=1 
    	AND (dispense_id =0 OR dispense_id =#{value})
    	ORDER BY id ASC
    	LIMIT 1
    </select>
    <select id="getExamineRecipe" parameterType="java.lang.Integer" resultType="java.lang.Integer" >
    	SELECT count(*) FROM recipe WHERE shipping_state = 5 AND dispense_id = #{value} limit 1
    </select>
    <select id="listRecipeState" parameterType="java.util.List" resultType="com.tangu.tcmts.po.RecipeDO">
    	SELECT 
    		rf.`hospital_status`,r.input_state, r.shipping_state,r.check_state,r.sys_recipe_code
    	FROM recipe r
		LEFT JOIN `recipe_finance` rf ON  r.`id` = rf.`recipe_id`
		WHERE r.id in 
		<foreach collection="list" index="index" item="item" separator="," open="(" close=")">
			#{item.id}
		</foreach>
    </select>

    <select id="getRecipeVO" parameterType="com.tangu.tcmts.po.RecipeDTO" resultType="com.tangu.tcmts.po.RecipeVO">
      SELECT id as recipeId,sys_recipe_code,shelves_code,inpatient_area,
      invoice_code,recipient_name,quantity,total_package_paste,belong,shipping_state
      FROM recipe WHERE sys_recipe_code = #{sysRecipeCode}
      LIMIT 1
    </select>
  
    <select id="getRecipeSerial" parameterType="com.tangu.tcmts.po.RecipeDTO"  resultType="com.tangu.tcmts.po.RecipeSerialVO">
      SELECT r.id AS recipeId,r.sys_recipe_code,r.invoice_code,
      r.recipe_serial,r.shelves_code,
      r.recipient_name,r.quantity,r.total_package_paste,
      r.shipping_state 
      FROM recipe r
      WHERE r.recipe_serial = #{recipeSerial}
      LIMIT 1
    </select>

	<select id="getRecipeSerialVO" parameterType="com.tangu.tcmts.po.RecipeDTO"  resultType="com.tangu.tcmts.po.RecipeSerialVO">
      SELECT r.id AS recipeId,r.sys_recipe_code,r.invoice_code,
      rs.recipe_serial,r.shelves_code,
      r.recipient_name,r.quantity,r.total_package_paste,
      r.shipping_state 
      FROM recipe_serial rs
      LEFT JOIN recipe r ON r.id = rs.recipe_id
      WHERE rs.recipe_serial = #{recipeSerial}
      LIMIT 1
    </select>
    
    <update id="updateHisRecipe" parameterType="com.tangu.tcmts.po.RecipeDO" >
  	UPDATE recipe 
	SET 
	quantity = #{quantity},
	package_paste = #{packagePaste},
	boil_type = #{boilType},
	pack_type = #{packType},
	soak_time = #{soakTime},
	boil_time = #{boilTime},
	other_package = #{otherPackage},
	carry_id = #{carryId},
	consignee = #{consignee},
	consignee_tel = #{consigneeTel},
	province = #{province},
	city = #{city},
	region = #{region},
	recipient_address = #{recipientAddress},
	packing_name = #{packingName},
	remark = #{remark},
	mod_user = #{modUser},
	special_print = #{specialPrint},
	total_package_paste = #{totalPackagePaste},
	take_time = #{takeTime},
	receive_remark = #{receiveRemark},
	second_boil_time = #{secondBoilTime},
	logistics_code = #{logisticsCode},
	<if test="preCheckState != null">
		pre_check_state=#{preCheckState},
	</if>
	<if test="takeType != null">
		take_type = #{takeType},
	</if>
	boil_project_id = #{boilProjectId}
	WHERE id = #{id}
  </update>
</mapper>